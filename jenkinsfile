pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'my-flask-api'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the local files
                    sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG .'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    // Run unit tests inside a temporary Docker container
                    sh 'docker run --rm $DOCKER_IMAGE:$DOCKER_TAG python -m unittest discover -s . -p "test_app.py"'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to a Docker registry
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
                    }
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Stop any running container with the same name and start the new container
                    sh 'docker stop my-flask-container || true && docker rm my-flask-container || true'
                    sh 'docker run -d -p 5000:5000 --name my-flask-container $DOCKER_IMAGE:$DOCKER_TAG'
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh 'docker system prune -f'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}
